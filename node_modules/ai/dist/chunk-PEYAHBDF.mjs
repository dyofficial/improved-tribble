import {
  createCallbacksTransformer,
  trimStartOfStreamHelper
} from "./chunk-265FSSO4.mjs";
import {
  __async
} from "./chunk-2L3ZO4UM.mjs";

// streams/huggingface-stream.ts
function createParser(res) {
  const trimStartOfStream = trimStartOfStreamHelper();
  return new ReadableStream({
    pull(controller) {
      return __async(this, null, function* () {
        var _a2, _b;
        const { value, done } = yield res.next();
        if (done) {
          controller.close();
          return;
        }
        const text = trimStartOfStream((_b = (_a2 = value.token) == null ? void 0 : _a2.text) != null ? _b : "");
        if (!text)
          return;
        if (value.generated_text != null && value.generated_text.length > 0) {
          controller.close();
          return;
        }
        if (text === "</s>" || text === "<|endoftext|>") {
          controller.close();
        } else {
          controller.enqueue(text);
        }
      });
    }
  });
}
function HuggingFaceStream(res, callbacks) {
  return createParser(res).pipeThrough(createCallbacksTransformer(callbacks));
}

export {
  HuggingFaceStream
};

import {
  createCallbacksTransformer
} from "./chunk-265FSSO4.mjs";
import {
  __async
} from "./chunk-2L3ZO4UM.mjs";

// streams/langchain-stream.ts
function LangChainStream(callbacks) {
  const stream = new TransformStream();
  const writer = stream.writable.getWriter();
  return {
    stream: stream.readable.pipeThrough(createCallbacksTransformer(callbacks)),
    handlers: {
      handleLLMNewToken: (token) => __async(this, null, function* () {
        yield writer.ready;
        yield writer.write(token);
      }),
      handleChainEnd: () => __async(this, null, function* () {
        yield writer.ready;
        yield writer.close();
      }),
      handleLLMError: (e) => __async(this, null, function* () {
        yield writer.ready;
        yield writer.abort(e);
      })
    }
  };
}

export {
  LangChainStream
};
